==========================
The ``matrix_mul`` module
==========================

Using ``matrix_mul``
---------------------

Import the function:

    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul


Now test it:

    >>> matrix_mul([[2, 5], [3, 1]], [[4, 2], [6, 3]])
    [[38, 19], [18, 9]]

    >>> matrix_mul([[5, 8]], [[2.0, 1], [3, 7.0]])
    [[34.0, 61.0]]

    >>> matrix_mul([[-1, 3], [2, -4]], [[5, -2], [7, 1]])
    [[16, 5], [-18, -8]]

    >>> matrix_mul([[3, 4]], 5)
    Traceback (most recent call last):
    TypeError: m_b must be a list

    >>> matrix_mul("Hello", [[2, 3]])
    Traceback (most recent call last):
    TypeError: m_a must be a list

    >>> matrix_mul(["Alice", "Bob"], [[1, 2]])
    Traceback (most recent call last):
    TypeError: m_a must be a list of lists

    >>> matrix_mul([[2, 3]], ["Charlie", "Dave"])
    Traceback (most recent call last):
    TypeError: m_b must be a list of lists

    >>> matrix_mul([], [[7, 9]])
    Traceback (most recent call last):
    ValueError: m_a can't be empty

    >>> matrix_mul([[1, 4], ["Hello", 7]], [[7, 2], [3, 6]])
    Traceback (most recent call last):
    TypeError: m_a should contain only integers or floats

    >>> matrix_mul([[5, 2], [3, 6]], [[1, 8], ["Hi", 7]])
    Traceback (most recent call last):
    TypeError: m_b should contain only integers or floats

    >>> matrix_mul([[4, 5, 6], [1, 2, 3]], [[7, 8], [9, 10]])
    Traceback (most recent call last):
    ValueError: m_a and m_b can't be multiplied

    >>> matrix_mul([[4, 5, 6], [1, 2, 3]])
    Traceback (most recent call last):
    TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

    >>> matrix_mul()
    Traceback (most recent call last):
    TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
