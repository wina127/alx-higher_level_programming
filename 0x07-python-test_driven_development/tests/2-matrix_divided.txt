|  Test Div Matrix     |
=======================

``matrix_divided()`` Returns a new matrix that results from dividing each element of the input matrix by the div value.
-----------------------------------------------------------------------------------------------------------------------

Importing the function from the module:
    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Testing regular case:
    >>> matrix = [[4, 8, 12], [16, 20, 24]]
    >>> matrix_divided(matrix, 2)
    [[2.0, 4.0, 6.0], [8.0, 10.0, 12.0]]

Testing with positive and negative cases with integer and float values:
    >>> matrix = [[2.5, 5.7, 3], [-8, 10, -4.5]]
    >>> matrix_divided(matrix, 3)
    [[0.83, 1.9, 1.0], [-2.67, 3.33, -1.5]]

Testing with positive and negative cases with integer values:
    >>> matrix = [[6, -10, 9], [-12, 15, -18]]
    >>> matrix_divided(matrix, 3)
    [[2.0, -3.33, 3.0], [-4.0, 5.0, -6.0]]

Testing with positive and negative cases with float values:
    >>> matrix = [[-3.2, 5.6, -2.1], [-4.5, 6.8, -7.2]]
    >>> matrix_divided(matrix, 3)
    [[-1.07, 1.87, -0.7], [-1.5, 2.27, -2.4]]

Testing if the divisor is a float value:
    >>> matrix = [[4, 8, 12], [16, 20, 24]]
    >>> matrix_divided(matrix, 4.5)
    [[0.89, 1.78, 2.67], [3.56, 4.44, 5.33]]

Testing if the list is empty with a divisor:
    >>> matrix = [[], []]
    >>> matrix_divided(matrix, 2)
    [[], []]
